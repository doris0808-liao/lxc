from web3 import Web3
from eth_utils.hexadecimal import encode_hex
from eth_account.messages import encode_defunct
from eth_account import Account
import time
import PRC
import random
import get_wallet

rpc ='https://eth.llamarpc.com'
rpc ='https://rpc.flashbots.net'
w3 = Web3(Web3.HTTPProvider(PRC.Reddio_TestNet_RPC))

if not w3.isConnected():
    raise Exception("Not connected to network")


def SendRed(form_prv_key):
    account = w3.eth.account.from_key(form_prv_key)
    address_from=account.address
    balance = w3.eth.get_balance(address_from)
    value = Web3.fromWei(balance,'ether')
    print(address_from+':'+str(value))
    amount = random.randint(1,int(value)-1)
    # amount = random.randint(20,50)/10000
    nonce = w3.eth.getTransactionCount(address_from)
    # if nonce>2:
    #     return
    if  value > 0.0001 :
       
        
        tx = {
            'nonce' : nonce,
            'to' : address_from,
            'value' : w3.toWei(amount,'ether'),
            'gas' : 21000,
            'gasPrice' : w3.toWei('0.75','gwei')    
        }

        signed_tx = w3.eth.account.signTransaction(tx,form_prv_key)
        tx_hash = w3.eth.sendRawTransaction(signed_tx.rawTransaction)
        print(f"Stake 交易已发送，哈希: {w3.toHex(tx_hash)}")
        # tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)
        
        # status = tx_receipt["status"]
        # print(f"交易确认，区块号: {tx_receipt.blockNumber},交互状态：{status}") 

        number = random.randint(5, 6)
        print(f'小休{number}秒')
        time.sleep(number)


for i in range(0,len(get_wallet.private_key_list)):
    print(i)
    SendRed(get_wallet.private_key_list[i])
    # exit()
    
